
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'progAND ASSIGN BOOLEAN CLASS COMMA COMMENT DIFFERENT DOT ELSE EQUALS EXTENDS FALSE GEQUAL GTHAN ID IF INT LBRACKET LCURLY LENGTH LEQUAL LPAREN LTHAN MAIN MINUS NEW NOT NULL NUMBER PLUS PRINTLN PUBLIC RBRACKET RCURLY RETURN RPAREN SEMICOLON STATIC STRING THIS TIMES TRUE VOID WHILE WSprog : main classes\n    main : CLASS ID LCURLY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LCURLY cmd RCURLY RCURLY\n    \n    classes : classe\n            | classes classe\n    \n    classe : CLASS ID EXTENDS ID LCURLY vars metodos RCURLY\n            | CLASS ID LCURLY vars metodos RCURLY\n            | empty\n    \n    vars : var\n        | vars var\n        | empty\n    \n    var : tipo ID SEMICOLON\n        | ID ID SEMICOLON\n    \n    metodos : metodo\n            | metodos metodo\n    \n    metodo : PUBLIC tipo ID LPAREN params RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY\n            | PUBLIC tipo ID LPAREN RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY\n            | PUBLIC ID ID LPAREN params RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY\n            | PUBLIC ID ID LPAREN RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY\n            | empty\n    \n    params : tipo ID\n    | params COMMA tipo ID\n    | ID ID\n    | params COMMA ID ID\n    \n    tipo : INT LBRACKET RBRACKET\n        | BOOLEAN\n        | INT\n    \n    cmds : cmd\n        | cmds cmd\n    \n    cmd : LCURLY cmds RCURLY\n        | IF LPAREN exp RPAREN cmd\n        | IF LPAREN exp RPAREN cmd ELSE cmd\n        | WHILE LPAREN exp RPAREN cmd\n        | PRINTLN LPAREN exp RPAREN SEMICOLON\n        | ID ASSIGN exp SEMICOLON\n        | ID LBRACKET exp RBRACKET ASSIGN exp SEMICOLON\n        | empty\n    \n    exp : exp AND rexp\n    | rexp\n    \n    rexp : rexp LTHAN aexp\n        | rexp  EQUALS aexp\n        | rexp DIFFERENT aexp\n        | aexp\n    \n    aexp : aexp PLUS mexp\n        | aexp MINUS mexp\n        | mexp\n    \n    mexp : mexp TIMES sexp\n        | sexp\n    \n    sexp : NOT sexp\n        | MINUS sexp\n        | TRUE\n        | FALSE\n        | NUMBER\n        | NULL\n        | NEW INT LBRACKET exp RBRACKET\n        | pexp DOT LENGTH\n        | ID DOT LENGTH\n        | pexp LBRACKET exp RBRACKET\n        | ID LBRACKET exp RBRACKET\n        | ID\n        | pexp\n    \n    pexp : THIS\n        | NEW ID LPAREN RPAREN\n        | LPAREN exp RPAREN\n        | pexp DOT ID\n        | ID DOT ID\n        | pexp DOT ID LPAREN exps RPAREN\n        | pexp DOT ID LPAREN RPAREN\n        | ID DOT ID LPAREN exps RPAREN\n        | ID DOT ID LPAREN RPAREN\n    \n    exps : exp\n        | exps COMMA exp\n    empty :'
    
_lr_action_items = {'CLASS':([0,2,4,5,7,9,13,17,24,26,34,36,43,47,62,64,66,69,70,71,73,77,78,84,85,87,90,97,99,146,147,176,185,],[3,6,6,-3,-7,-4,-72,-72,-72,-72,-72,-6,-72,-5,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-2,-72,]),'$end':([1,2,4,5,7,9,13,17,24,26,34,36,43,47,62,64,66,69,70,71,73,77,78,84,85,87,90,97,99,146,147,176,185,],[0,-72,-1,-3,-7,-4,-72,-72,-72,-72,-72,-6,-72,-5,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-2,-72,]),'PUBLIC':([2,4,11,13,17,18,19,24,26,27,28,30,34,35,37,40,43,62,64,66,69,70,71,73,77,78,84,85,87,90,97,99,146,147,170,175,177,185,186,],[-72,-72,14,-72,29,-8,-10,-72,29,-9,-13,-19,29,-12,-14,-11,29,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-16,-18,-15,-72,-17,]),'RCURLY':([2,4,13,17,18,19,24,26,27,28,30,34,35,37,40,43,62,64,66,69,70,71,73,77,78,79,83,84,85,87,90,93,97,99,118,125,129,145,146,147,150,151,152,170,171,172,173,174,175,177,185,186,193,194,],[-72,-72,-72,-72,-8,-10,-72,36,-9,-13,-19,-72,-12,-14,-11,47,-72,-72,-72,-72,-72,-72,-72,-72,-72,-27,-36,-72,-72,-72,118,-28,-72,-72,-29,151,-34,170,-72,-72,175,176,177,-16,-30,-32,-33,186,-18,-15,-72,-17,-35,-31,]),'ID':([2,3,4,6,12,13,16,17,18,19,20,21,22,24,26,27,29,34,35,38,39,40,41,43,48,49,51,52,61,62,64,65,66,67,68,69,70,71,73,76,77,78,79,83,84,85,87,88,89,90,92,93,94,95,96,97,98,99,100,106,108,113,116,118,123,127,128,129,130,131,132,133,134,135,136,141,142,146,147,163,169,171,172,173,178,182,185,193,194,196,],[-72,8,-72,10,15,16,25,16,-8,-10,31,-26,-25,16,-72,-9,39,16,-12,44,45,-11,-24,-72,52,52,58,59,68,16,16,72,16,74,75,76,16,76,76,25,91,91,-27,-36,76,91,91,101,101,91,101,-28,101,101,101,91,101,91,101,101,101,140,101,-29,101,153,101,-34,101,101,101,101,101,101,101,166,101,91,91,101,101,-30,-32,-33,101,101,91,-35,-31,101,]),'INT':([2,4,13,17,18,19,24,26,27,29,34,35,40,43,48,49,61,62,64,66,69,70,71,73,77,78,84,85,87,90,97,99,113,146,147,185,],[-72,-72,21,21,-8,-10,21,-72,-9,21,21,-12,-11,-72,21,21,21,21,21,21,21,21,21,21,-72,-72,21,-72,-72,-72,-72,-72,139,-72,-72,-72,]),'BOOLEAN':([2,4,13,17,18,19,24,26,27,29,34,35,40,43,48,49,61,62,64,66,69,70,71,73,77,78,84,85,87,90,97,99,146,147,185,],[-72,-72,22,22,-8,-10,22,-72,-9,22,22,-12,-11,-72,22,22,22,22,22,22,22,22,22,22,-72,-72,22,-72,-72,-72,-72,-72,-72,-72,-72,]),'RETURN':([2,4,13,17,18,19,24,26,27,34,35,40,43,62,64,66,69,70,71,73,77,78,79,83,84,85,87,90,93,97,99,118,129,146,147,171,172,173,185,193,194,],[-72,-72,-72,-72,-8,-10,-72,-72,-9,-72,-12,-11,-72,-72,-72,-72,-72,-72,-72,-72,-72,92,-27,-36,-72,98,100,-72,-28,123,-72,-29,-34,-72,-72,-30,-32,-33,-72,-35,-31,]),'LCURLY':([2,4,8,10,13,15,17,18,19,24,26,27,34,35,40,43,54,56,60,62,63,64,66,69,70,71,73,77,78,79,83,84,85,86,87,90,93,97,99,118,129,146,147,171,172,173,185,193,194,],[-72,-72,11,13,-72,24,-72,-8,-10,-72,-72,-9,-72,-12,-11,-72,62,64,66,-72,70,-72,-72,77,-72,77,77,77,77,-27,-36,77,77,99,77,77,-28,77,77,-29,-34,77,77,-30,-32,-33,77,-35,-31,]),'IF':([2,4,13,17,18,19,24,26,27,34,35,40,43,62,64,66,69,70,71,73,77,78,79,83,84,85,87,90,93,97,99,118,129,146,147,171,172,173,185,193,194,],[-72,-72,-72,-72,-8,-10,-72,-72,-9,-72,-12,-11,-72,-72,-72,-72,80,-72,80,80,80,80,-27,-36,80,80,80,80,-28,80,80,-29,-34,80,80,-30,-32,-33,80,-35,-31,]),'WHILE':([2,4,13,17,18,19,24,26,27,34,35,40,43,62,64,66,69,70,71,73,77,78,79,83,84,85,87,90,93,97,99,118,129,146,147,171,172,173,185,193,194,],[-72,-72,-72,-72,-8,-10,-72,-72,-9,-72,-12,-11,-72,-72,-72,-72,81,-72,81,81,81,81,-27,-36,81,81,81,81,-28,81,81,-29,-34,81,81,-30,-32,-33,81,-35,-31,]),'PRINTLN':([2,4,13,17,18,19,24,26,27,34,35,40,43,62,64,66,69,70,71,73,77,78,79,83,84,85,87,90,93,97,99,118,129,146,147,171,172,173,185,193,194,],[-72,-72,-72,-72,-8,-10,-72,-72,-9,-72,-12,-11,-72,-72,-72,-72,82,-72,82,82,82,82,-27,-36,82,82,82,82,-28,82,82,-29,-34,82,82,-30,-32,-33,82,-35,-31,]),'ELSE':([2,4,13,17,24,26,34,43,62,64,66,69,70,71,73,77,78,83,84,85,87,90,97,99,118,129,146,147,171,172,173,185,193,194,],[-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-72,-36,-72,-72,-72,-72,-72,-72,-29,-34,-72,-72,185,-32,-33,-72,-35,-31,]),'EXTENDS':([10,],[12,]),'STATIC':([14,],[23,]),'LBRACKET':([21,50,76,91,101,114,115,139,153,166,168,181,188,192,195,197,],[32,57,89,89,128,142,-61,163,-65,-64,-63,-62,-69,-67,-68,-66,]),'VOID':([23,],[33,]),'SEMICOLON':([25,31,101,102,103,104,105,107,109,110,111,112,114,115,119,124,126,137,138,148,149,153,154,156,157,158,159,160,161,162,165,166,168,179,181,183,184,188,190,192,195,197,],[35,40,-59,129,-38,-42,-45,-47,-50,-51,-52,-53,-60,-61,145,150,152,-49,-48,173,174,-65,-56,-37,-39,-40,-41,-43,-44,-46,-55,-64,-63,-58,-62,-57,193,-69,-54,-67,-68,-66,]),'RBRACKET':([32,57,101,103,104,105,107,109,110,111,112,114,115,117,137,138,153,154,155,156,157,158,159,160,161,162,165,166,167,168,179,180,181,183,188,190,192,195,197,],[41,65,-59,-38,-42,-45,-47,-50,-51,-52,-53,-60,-61,144,-49,-48,-65,-56,179,-37,-39,-40,-41,-43,-44,-46,-55,-64,183,-63,-58,190,-62,-57,-69,-54,-67,-68,-66,]),'MAIN':([33,],[42,]),'LPAREN':([42,44,45,80,81,82,88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,140,142,153,163,166,169,178,182,196,],[46,48,49,94,95,96,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,164,116,178,116,182,116,116,116,116,]),'STRING':([46,],[50,]),'RPAREN':([48,49,53,55,58,59,72,74,75,101,103,104,105,107,109,110,111,112,114,115,120,121,122,137,138,143,153,154,156,157,158,159,160,161,162,164,165,166,168,178,179,181,182,183,187,188,189,190,191,192,195,197,198,],[54,56,60,63,-20,-22,86,-21,-23,-59,-38,-42,-45,-47,-50,-51,-52,-53,-60,-61,146,147,148,-49,-48,168,-65,-56,-37,-39,-40,-41,-43,-44,-46,181,-55,-64,-63,188,-58,-62,192,-57,195,-69,-70,-54,197,-67,-68,-66,-71,]),'COMMA':([53,55,58,59,74,75,101,103,104,105,107,109,110,111,112,114,115,137,138,153,154,156,157,158,159,160,161,162,165,166,168,179,181,183,187,188,189,190,191,192,195,197,198,],[61,61,-20,-22,-21,-23,-59,-38,-42,-45,-47,-50,-51,-52,-53,-60,-61,-49,-48,-65,-56,-37,-39,-40,-41,-43,-44,-46,-55,-64,-63,-58,-62,-57,196,-69,-70,-54,196,-67,-68,-66,-71,]),'ASSIGN':([76,91,144,],[88,88,169,]),'NOT':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'MINUS':([88,89,92,94,95,96,98,100,101,104,105,106,107,108,109,110,111,112,114,115,116,123,128,130,131,132,133,134,135,136,137,138,142,153,154,157,158,159,160,161,162,163,165,166,168,169,178,179,181,182,183,188,190,192,195,196,197,],[106,106,106,106,106,106,106,106,-59,135,-45,106,-47,106,-50,-51,-52,-53,-60,-61,106,106,106,106,106,106,106,106,106,106,-49,-48,106,-65,-56,135,135,135,-43,-44,-46,106,-55,-64,-63,106,106,-58,-62,106,-57,-69,-54,-67,-68,106,-66,]),'TRUE':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'FALSE':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'NUMBER':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'NULL':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NEW':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'THIS':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'DOT':([101,114,115,153,166,168,181,188,192,195,197,],[127,141,-61,-65,-64,-63,-62,-69,-67,-68,-66,]),'AND':([101,102,103,104,105,107,109,110,111,112,114,115,117,119,120,121,122,124,126,137,138,143,149,153,154,155,156,157,158,159,160,161,162,165,166,167,168,179,180,181,183,184,188,189,190,192,195,197,198,],[-59,130,-38,-42,-45,-47,-50,-51,-52,-53,-60,-61,130,130,130,130,130,130,130,-49,-48,130,130,-65,-56,130,-37,-39,-40,-41,-43,-44,-46,-55,-64,130,-63,-58,130,-62,-57,130,-69,130,-54,-67,-68,-66,130,]),'LTHAN':([101,103,104,105,107,109,110,111,112,114,115,137,138,153,154,156,157,158,159,160,161,162,165,166,168,179,181,183,188,190,192,195,197,],[-59,131,-42,-45,-47,-50,-51,-52,-53,-60,-61,-49,-48,-65,-56,131,-39,-40,-41,-43,-44,-46,-55,-64,-63,-58,-62,-57,-69,-54,-67,-68,-66,]),'EQUALS':([101,103,104,105,107,109,110,111,112,114,115,137,138,153,154,156,157,158,159,160,161,162,165,166,168,179,181,183,188,190,192,195,197,],[-59,132,-42,-45,-47,-50,-51,-52,-53,-60,-61,-49,-48,-65,-56,132,-39,-40,-41,-43,-44,-46,-55,-64,-63,-58,-62,-57,-69,-54,-67,-68,-66,]),'DIFFERENT':([101,103,104,105,107,109,110,111,112,114,115,137,138,153,154,156,157,158,159,160,161,162,165,166,168,179,181,183,188,190,192,195,197,],[-59,133,-42,-45,-47,-50,-51,-52,-53,-60,-61,-49,-48,-65,-56,133,-39,-40,-41,-43,-44,-46,-55,-64,-63,-58,-62,-57,-69,-54,-67,-68,-66,]),'PLUS':([101,104,105,107,109,110,111,112,114,115,137,138,153,154,157,158,159,160,161,162,165,166,168,179,181,183,188,190,192,195,197,],[-59,134,-45,-47,-50,-51,-52,-53,-60,-61,-49,-48,-65,-56,134,134,134,-43,-44,-46,-55,-64,-63,-58,-62,-57,-69,-54,-67,-68,-66,]),'TIMES':([101,105,107,109,110,111,112,114,115,137,138,153,154,160,161,162,165,166,168,179,181,183,188,190,192,195,197,],[-59,136,-47,-50,-51,-52,-53,-60,-61,-49,-48,-65,-56,136,136,-46,-55,-64,-63,-58,-62,-57,-69,-54,-67,-68,-66,]),'LENGTH':([127,141,],[154,165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'main':([0,],[2,]),'classes':([2,],[4,]),'classe':([2,4,],[5,9,]),'empty':([2,4,13,17,24,26,34,43,62,64,66,69,70,71,73,77,78,84,85,87,90,97,99,146,147,185,],[7,7,19,30,19,30,30,30,19,19,19,83,19,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'vars':([13,24,62,64,66,70,],[17,34,69,71,73,84,]),'var':([13,17,24,34,62,64,66,69,70,71,73,84,],[18,27,18,27,18,18,18,27,18,27,27,27,]),'tipo':([13,17,24,29,34,48,49,61,62,64,66,69,70,71,73,84,],[20,20,20,38,20,51,51,67,20,20,20,20,20,20,20,20,]),'metodos':([17,34,],[26,43,]),'metodo':([17,26,34,43,],[28,37,28,37,]),'params':([48,49,],[53,55,]),'cmds':([69,71,73,77,84,],[78,85,87,90,97,]),'cmd':([69,71,73,77,78,84,85,87,90,97,99,146,147,185,],[79,79,79,79,93,79,93,93,93,93,125,171,172,194,]),'exp':([88,89,92,94,95,96,98,100,116,123,128,142,163,169,178,182,196,],[102,117,119,120,121,122,124,126,143,149,155,167,180,184,189,189,198,]),'rexp':([88,89,92,94,95,96,98,100,116,123,128,130,142,163,169,178,182,196,],[103,103,103,103,103,103,103,103,103,103,103,156,103,103,103,103,103,103,]),'aexp':([88,89,92,94,95,96,98,100,116,123,128,130,131,132,133,142,163,169,178,182,196,],[104,104,104,104,104,104,104,104,104,104,104,104,157,158,159,104,104,104,104,104,104,]),'mexp':([88,89,92,94,95,96,98,100,116,123,128,130,131,132,133,134,135,142,163,169,178,182,196,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,160,161,105,105,105,105,105,105,]),'sexp':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[107,107,107,107,107,107,107,107,137,138,107,107,107,107,107,107,107,107,107,162,107,107,107,107,107,107,]),'pexp':([88,89,92,94,95,96,98,100,106,108,116,123,128,130,131,132,133,134,135,136,142,163,169,178,182,196,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'exps':([178,182,],[187,191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> main classes','prog',2,'p_prog','minijavaparse.py',29),
  ('main -> CLASS ID LCURLY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LCURLY cmd RCURLY RCURLY','main',17,'p_main','minijavaparse.py',35),
  ('classes -> classe','classes',1,'p_classes','minijavaparse.py',44),
  ('classes -> classes classe','classes',2,'p_classes','minijavaparse.py',45),
  ('classe -> CLASS ID EXTENDS ID LCURLY vars metodos RCURLY','classe',8,'p_classe','minijavaparse.py',57),
  ('classe -> CLASS ID LCURLY vars metodos RCURLY','classe',6,'p_classe','minijavaparse.py',58),
  ('classe -> empty','classe',1,'p_classe','minijavaparse.py',59),
  ('vars -> var','vars',1,'p_vars','minijavaparse.py',72),
  ('vars -> vars var','vars',2,'p_vars','minijavaparse.py',73),
  ('vars -> empty','vars',1,'p_vars','minijavaparse.py',74),
  ('var -> tipo ID SEMICOLON','var',3,'p_var','minijavaparse.py',87),
  ('var -> ID ID SEMICOLON','var',3,'p_var','minijavaparse.py',88),
  ('metodos -> metodo','metodos',1,'p_metodos','minijavaparse.py',94),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','minijavaparse.py',95),
  ('metodo -> PUBLIC tipo ID LPAREN params RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY','metodo',13,'p_metodo','minijavaparse.py',106),
  ('metodo -> PUBLIC tipo ID LPAREN RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY','metodo',12,'p_metodo','minijavaparse.py',107),
  ('metodo -> PUBLIC ID ID LPAREN params RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY','metodo',13,'p_metodo','minijavaparse.py',108),
  ('metodo -> PUBLIC ID ID LPAREN RPAREN LCURLY vars cmds RETURN exp SEMICOLON RCURLY','metodo',12,'p_metodo','minijavaparse.py',109),
  ('metodo -> empty','metodo',1,'p_metodo','minijavaparse.py',110),
  ('params -> tipo ID','params',2,'p_params','minijavaparse.py',120),
  ('params -> params COMMA tipo ID','params',4,'p_params','minijavaparse.py',121),
  ('params -> ID ID','params',2,'p_params','minijavaparse.py',122),
  ('params -> params COMMA ID ID','params',4,'p_params','minijavaparse.py',123),
  ('tipo -> INT LBRACKET RBRACKET','tipo',3,'p_tipo','minijavaparse.py',129),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','minijavaparse.py',130),
  ('tipo -> INT','tipo',1,'p_tipo','minijavaparse.py',131),
  ('cmds -> cmd','cmds',1,'p_cmds','minijavaparse.py',137),
  ('cmds -> cmds cmd','cmds',2,'p_cmds','minijavaparse.py',138),
  ('cmd -> LCURLY cmds RCURLY','cmd',3,'p_cmd','minijavaparse.py',144),
  ('cmd -> IF LPAREN exp RPAREN cmd','cmd',5,'p_cmd','minijavaparse.py',145),
  ('cmd -> IF LPAREN exp RPAREN cmd ELSE cmd','cmd',7,'p_cmd','minijavaparse.py',146),
  ('cmd -> WHILE LPAREN exp RPAREN cmd','cmd',5,'p_cmd','minijavaparse.py',147),
  ('cmd -> PRINTLN LPAREN exp RPAREN SEMICOLON','cmd',5,'p_cmd','minijavaparse.py',148),
  ('cmd -> ID ASSIGN exp SEMICOLON','cmd',4,'p_cmd','minijavaparse.py',149),
  ('cmd -> ID LBRACKET exp RBRACKET ASSIGN exp SEMICOLON','cmd',7,'p_cmd','minijavaparse.py',150),
  ('cmd -> empty','cmd',1,'p_cmd','minijavaparse.py',151),
  ('exp -> exp AND rexp','exp',3,'p_exp','minijavaparse.py',157),
  ('exp -> rexp','exp',1,'p_exp','minijavaparse.py',158),
  ('rexp -> rexp LTHAN aexp','rexp',3,'p_rexp','minijavaparse.py',164),
  ('rexp -> rexp EQUALS aexp','rexp',3,'p_rexp','minijavaparse.py',165),
  ('rexp -> rexp DIFFERENT aexp','rexp',3,'p_rexp','minijavaparse.py',166),
  ('rexp -> aexp','rexp',1,'p_rexp','minijavaparse.py',167),
  ('aexp -> aexp PLUS mexp','aexp',3,'p_aexp','minijavaparse.py',173),
  ('aexp -> aexp MINUS mexp','aexp',3,'p_aexp','minijavaparse.py',174),
  ('aexp -> mexp','aexp',1,'p_aexp','minijavaparse.py',175),
  ('mexp -> mexp TIMES sexp','mexp',3,'p_mexp','minijavaparse.py',181),
  ('mexp -> sexp','mexp',1,'p_mexp','minijavaparse.py',182),
  ('sexp -> NOT sexp','sexp',2,'p_sexp','minijavaparse.py',188),
  ('sexp -> MINUS sexp','sexp',2,'p_sexp','minijavaparse.py',189),
  ('sexp -> TRUE','sexp',1,'p_sexp','minijavaparse.py',190),
  ('sexp -> FALSE','sexp',1,'p_sexp','minijavaparse.py',191),
  ('sexp -> NUMBER','sexp',1,'p_sexp','minijavaparse.py',192),
  ('sexp -> NULL','sexp',1,'p_sexp','minijavaparse.py',193),
  ('sexp -> NEW INT LBRACKET exp RBRACKET','sexp',5,'p_sexp','minijavaparse.py',194),
  ('sexp -> pexp DOT LENGTH','sexp',3,'p_sexp','minijavaparse.py',195),
  ('sexp -> ID DOT LENGTH','sexp',3,'p_sexp','minijavaparse.py',196),
  ('sexp -> pexp LBRACKET exp RBRACKET','sexp',4,'p_sexp','minijavaparse.py',197),
  ('sexp -> ID LBRACKET exp RBRACKET','sexp',4,'p_sexp','minijavaparse.py',198),
  ('sexp -> ID','sexp',1,'p_sexp','minijavaparse.py',199),
  ('sexp -> pexp','sexp',1,'p_sexp','minijavaparse.py',200),
  ('pexp -> THIS','pexp',1,'p_pexp','minijavaparse.py',206),
  ('pexp -> NEW ID LPAREN RPAREN','pexp',4,'p_pexp','minijavaparse.py',207),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','minijavaparse.py',208),
  ('pexp -> pexp DOT ID','pexp',3,'p_pexp','minijavaparse.py',209),
  ('pexp -> ID DOT ID','pexp',3,'p_pexp','minijavaparse.py',210),
  ('pexp -> pexp DOT ID LPAREN exps RPAREN','pexp',6,'p_pexp','minijavaparse.py',211),
  ('pexp -> pexp DOT ID LPAREN RPAREN','pexp',5,'p_pexp','minijavaparse.py',212),
  ('pexp -> ID DOT ID LPAREN exps RPAREN','pexp',6,'p_pexp','minijavaparse.py',213),
  ('pexp -> ID DOT ID LPAREN RPAREN','pexp',5,'p_pexp','minijavaparse.py',214),
  ('exps -> exp','exps',1,'p_exps','minijavaparse.py',220),
  ('exps -> exps COMMA exp','exps',3,'p_exps','minijavaparse.py',221),
  ('empty -> <empty>','empty',0,'p_empty','minijavaparse.py',230),
]
